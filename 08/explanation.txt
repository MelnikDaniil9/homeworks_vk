Сначала измерял время чере time для 1-го пункта, затем обнаружил что профайл тоже время показывает,
решил не менять код для наглядности.


$ python3 measurer.py

1.1. Время создания экземпляров классов:

    MyClass: 7.605 секунд (10,000,000 экземпляров)
    MySlotClass: 4.981 секунда (10,000,000 экземпляров)
    MyWeakRefClass: 24.625 секунд (10,000,000 экземпляров)
    Создание экземпляров класса MyWeakRefClass занимает наибольшее количество времени из-за использования объектов weakref.

1.2. Время обновления атрибутов экземпляров классов:

    MyClass: 1.321 секунда
    MySlotClass: 1.185 секунды
    MyWeakRefClass: 16.061 секунда
    MyWeakRefClass с объектами PassClass: 2.523 секунды

    Обновление атрибутов экземпляров класса MyWeakRefClass занимает наибольшее количество времени. Но все зависит от типа
    объекта, при изменении на объект пустого класса PassClass время занчительно сокращается.

    (img1.png)



для памяти n = 10 * 5
для вызовов n = 10 * 7

2. При анализе профилирования памяти можно сделать вывод, что слоты экономят больше всего памяти. weakref является самым затратным способом
   (img2.png), (img3.png), (img4.png)
   Профилирование вызовов (img5.png) вывод описан в 1.1 , 1.2

